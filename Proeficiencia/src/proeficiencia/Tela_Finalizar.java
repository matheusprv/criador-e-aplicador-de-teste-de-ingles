/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proeficiencia;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static proeficiencia.Tela_Inicial.closeConnection;
import static proeficiencia.Tela_Inicial.getConnection;

/**
 *
 * @author mathe
 */
public class Tela_Finalizar extends javax.swing.JFrame {
    int total=0;
    double pontos[]=new double[3];
   
    /**
     * Creates new form Finalizar
     */
    public Tela_Finalizar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Finalizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pontuacaoListening = new javax.swing.JLabel();
        pontuacaoReading = new javax.swing.JLabel();
        pontuacaoGrammar = new javax.swing.JLabel();
        pontuacaoTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        aprovado_reprovado = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        registro = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        serie = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Finalizar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Finalizar.setText("Finalizar");
        Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Listening:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Reading:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Grammar");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Total:");

        pontuacaoListening.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        pontuacaoListening.setText("Carregando");

        pontuacaoReading.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        pontuacaoReading.setText("Carregando");

        pontuacaoGrammar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        pontuacaoGrammar.setText("Carregando");

        pontuacaoTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        pontuacaoTotal.setText("Carregando");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Situação:");

        aprovado_reprovado.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        aprovado_reprovado.setText("Carregando");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Aluno:");

        registro.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        registro.setText("Carregando");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Série:");

        serie.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        serie.setText("Carregando");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pontuacaoTotal)
                                    .addComponent(aprovado_reprovado)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pontuacaoListening)
                                    .addComponent(pontuacaoReading)
                                    .addComponent(pontuacaoGrammar)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(Finalizar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registro)
                            .addComponent(serie))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(registro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(serie))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pontuacaoListening))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pontuacaoReading))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pontuacaoGrammar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pontuacaoTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(aprovado_reprovado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Finalizar)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_FinalizarActionPerformed
    
    private void obter_pontos() throws SQLException{
        Connection bd;
        int cont=0;
        String respostas[]= new String[3];
        
        String query;
        bd = Tela_Inicial.getConnection();
        query = "SELECT * FROM tb_pontos";
        PreparedStatement preparedStmt = bd.prepareStatement(query);
        preparedStmt = bd.prepareStatement(query);
        ResultSet rs = preparedStmt.executeQuery();
        
        while(rs.next()){ 
            respostas[cont]=rs.getString("pontos");
            cont++;
        }
        rs.close();
        preparedStmt.close();
        closeConnection(bd);  
        
        for(int cont1=0;cont1<3;cont1++){
            String alterar = respostas[cont1];
            pontos[cont1] = Double.parseDouble(alterar);
        }
        calcularListening();
    }
    
    private void aluno_informacoes() throws SQLException{
        String informacoes [] = new String [2];
        File realizar_leitura = new File ("Informacoes_do_aluno.txt");
        try{
            FileReader ler = new FileReader(realizar_leitura);
            BufferedReader leitura= new BufferedReader(ler);
            
            for(int cont=0;cont<2;cont++){
                String linha=leitura.readLine();
                informacoes[cont]=linha;
            }
        }catch(IOException ex){
            
        }
        registro.setText(informacoes[0]);
        if(informacoes[1].equals("1")){
            serie.setText("1° ano");
        }
        else if(informacoes[1].equals(("2"))){
            serie.setText("2°ano");
        }
        else{
            serie.setText("3°ano");
        }
        
        
      Connection bd = getConnection();
      String query = "insert into tb_resultado (ra, pontos) values (?, ?)";
      PreparedStatement preparedStmt = bd.prepareStatement(query);
      preparedStmt.setString (1, informacoes[0]);
      preparedStmt.setInt    (2, total);
      preparedStmt.execute();
      
      closeConnection(bd);       
        
    }
    
    private void calcularListening() throws SQLException{
        pontos[0]=pontos[0]/5;
        
        String respostas_do_professor[]= new String[5];
        
        Connection bd = getConnection();
        int cont1=0,cont2=0;
        
        String query;
        bd = getConnection();
        query = "SELECT * FROM tb_listening_primeiro_ano";
        PreparedStatement preparedStmt = bd.prepareStatement(query);
        preparedStmt = bd.prepareStatement(query);
        ResultSet rs = preparedStmt.executeQuery();
        
        while(rs.next()){ 
            if(cont1<25){
                cont1++;
            }
            else{
                respostas_do_professor[cont2]=rs.getString("questoe_enunciados_respostas");
                cont2++;
            }
        }
        rs.close();
        preparedStmt.close();
        closeConnection(bd);
        
        String respostasDoAluno[]= new String [5];
        File arquivoDoAluno = new File("RespostaDoAlunoNoListening.txt");
        try{
            FileReader ler = new FileReader(arquivoDoAluno);
            BufferedReader ler_arquivo2= new BufferedReader(ler);
            
            for(int cont=0;cont<5;cont++){
                String linha=ler_arquivo2.readLine();
                respostasDoAluno[cont]=linha;
            }
        }catch(IOException ex){
            
        }       
        
        int pontuacao=0;
        for(int cont=0;cont<5;cont++){
            if(respostasDoAluno[cont].equals(respostas_do_professor[cont])){
                pontuacao +=pontos[0];
            }
        }
        total=pontuacao;
        pontuacaoListening.setText(pontuacao+" pontos");
        calcular_texto();
    }
    
    private void calcular_texto() throws SQLException{
        pontos[1]=pontos[1]/5;
        
        String respostas_do_professor[]= new String[5];
        Connection bd = getConnection();
        int cont1=0,cont2=0;
        String query;
        bd = getConnection();
        query = "SELECT * FROM tb_readind_questoes_primeiro_ano";
        PreparedStatement preparedStmt = bd.prepareStatement(query);
        preparedStmt = bd.prepareStatement(query);
        ResultSet rs = preparedStmt.executeQuery();
        while(rs.next()){ 
            if(cont1<=24){
                cont1++;
            }
            else{
                respostas_do_professor[cont2]=rs.getString("questoes");
                cont2++;
            }
        }
        rs.close();
        preparedStmt.close();
        closeConnection(bd);
        
        String respostasDoAluno[]= new String [5];
        File arquivoDoAluno = new File("RespostaDoAlunoNoReading.txt");
        try{
            FileReader ler = new FileReader(arquivoDoAluno);
            BufferedReader ler_arquivo2= new BufferedReader(ler);
            
            for(int cont=0;cont<5;cont++){
                String linha=ler_arquivo2.readLine();
                respostasDoAluno[cont]=linha;
            }
        }catch(IOException ex){
            
        }       
        
        int pontuacao=0;
        for(int cont=0;cont<5;cont++){
            if(respostasDoAluno[cont].equals(respostas_do_professor[cont])){
                pontuacao +=pontos[1];
            }
        }
        total+=pontuacao;
        pontuacaoReading.setText(pontuacao+" pontos");
      
        calcular_grammar();
    }
    
    private void calcular_grammar() throws SQLException{
        pontos[2]=pontos[2]/10;
        
        String respostas_do_professor[]= new String[10];
        Connection bd = getConnection();
        int cont1=0,cont2=0;
        String query;
        bd = getConnection();
        query = "SELECT * FROM tb_grammar_primeiro_ano";
        PreparedStatement preparedStmt = bd.prepareStatement(query);
        preparedStmt = bd.prepareStatement(query);
        ResultSet rs = preparedStmt.executeQuery();
         while(rs.next()){ 
             if(cont1<=10){
                 cont1++;
             }
             else{
                 respostas_do_professor[cont2]=rs.getString("questoes_respostas");
                 cont2++;
             }
         }
         rs.close();
         preparedStmt.close();
         closeConnection(bd);
        
        String respostasDoAluno[]= new String [10];
        File arquivoDoAluno = new File("RespostaDoAlunoNoGrammar.txt");
        try{
            FileReader ler = new FileReader(arquivoDoAluno);
            BufferedReader ler_arquivo2= new BufferedReader(ler);
            
            for(int cont=0;cont<10;cont++){
                String linha=ler_arquivo2.readLine();
                respostasDoAluno[cont]=linha;
            }
        }catch(IOException ex){
            
        }       
        
        int pontuacao=0;
        for(int cont=0;cont<10;cont++){
            if(respostasDoAluno[cont].equals(respostas_do_professor[cont])){
                pontuacao +=pontos[2];
            }
        }
        total+=pontuacao;
        pontuacaoGrammar.setText(pontuacao+" pontos");
      
        total();
    }
    
    private void total() throws SQLException{
        pontuacaoTotal.setText(total+" pontos");
        if(total>=70){
            aprovado_reprovado.setText("Aprovado");
        }
        else{
            aprovado_reprovado.setText("Reprovado");
        }
        aluno_informacoes();
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            obter_pontos();
        } catch (SQLException ex) {
            Logger.getLogger(Tela_Finalizar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Finalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Finalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Finalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Finalizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Finalizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Finalizar;
    private javax.swing.JLabel aprovado_reprovado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel pontuacaoGrammar;
    private javax.swing.JLabel pontuacaoListening;
    private javax.swing.JLabel pontuacaoReading;
    private javax.swing.JLabel pontuacaoTotal;
    private javax.swing.JLabel registro;
    private javax.swing.JLabel serie;
    // End of variables declaration//GEN-END:variables
}
